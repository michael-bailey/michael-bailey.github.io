{"version":3,"sources":["res/img/profile smaller.png","res/svg/Logo.svg","res/img/Gallery/x720 sync nonrecursive //.jpe?g","res/img/Gallery/x720/DSC01412.jpg","res/img/Gallery/x720/DSC01414.jpg","res/img/Gallery/x720/DSC01415.jpg","res/img/Gallery/x720/DSC01419.jpg","res/img/Gallery/x720/DSC01421.jpg","res/img/Gallery/x720/DSC01430.jpg","res/img/Gallery/x720/DSC01431.jpg","res/img/Gallery/x720/DSC01436.jpg","res/img/Gallery/x720/DSC01442.jpg","res/img/Gallery/x720/DSC01445.jpg","res/img/Gallery/x720/DSC01446.jpg","res/img/Gallery/x720/DSC01447.jpg","res/img/Gallery/x720/DSC01449.jpg","res/img/Gallery/x720/DSC01450.jpg","res/img/Gallery/x720/DSC01451.jpg","res/img/Gallery/x720/DSC01456.jpg","res/img/Gallery/x720/DSC01459.jpg","res/img/Gallery/x360 sync nonrecursive //.jpe?g","res/img/Gallery/x360/DSC01412.jpg","res/img/Gallery/x360/DSC01414.jpg","res/img/Gallery/x360/DSC01415.jpg","res/img/Gallery/x360/DSC01419.jpg","res/img/Gallery/x360/DSC01421.jpg","res/img/Gallery/x360/DSC01430.jpg","res/img/Gallery/x360/DSC01431.jpg","res/img/Gallery/x360/DSC01436.jpg","res/img/Gallery/x360/DSC01442.jpg","res/img/Gallery/x360/DSC01445.jpg","res/img/Gallery/x360/DSC01446.jpg","res/img/Gallery/x360/DSC01447.jpg","res/img/Gallery/x360/DSC01449.jpg","res/img/Gallery/x360/DSC01450.jpg","res/img/Gallery/x360/DSC01451.jpg","res/img/Gallery/x360/DSC01456.jpg","res/img/Gallery/x360/DSC01459.jpg","components/HeaderBar/HeaderBar.jsx","pages/AboutPage/AboutPage.jsx","pages/ProjectsPage/ProjectPage.jsx","components/GitRepo/GithubRepoFull.jsx","components/Gallery/Gallery.jsx","components/ImageModal/ImageModal.jsx","components/sect/Sect.jsx","components/GitRepo/GithubRepoOverview.jsx","components/GitRepo/GithubUser.jsx","pages/HomePage/HomePage.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","HeaderBar","className","undefined","this","props","logo","height","src","title","children","Component","AboutPage","HomePage","state","gitRepoNames","getGithubPage","bind","name","fetch","then","res","json","result","setState","gitRepos","console","log","testing","atob","content","style","marginTop","width","Gallery","ImageModal","loadedImage","loading","filter","currentImage","overlaySrc","getImage","onload","image","Image","alt","Sect","GithubRepoOverview","http_url","fork_count","stars","contributers","description","user","repoName","repo","github","Octokit","repos","get","owner","data","forks_count","stargazers_count","collaborators_url","href","App","users","getByUsername","username","user_image","avatar_url","user_name","user_url","html_url","user_repos","public_repos","user_bio","bio","currentRepos","images","overlayImages","getGithubPages","getImages","slice","item","index","key","imageContext","require","overlayImageContext","splice","sort","profile","Logo","to","exact","path","component","ProjectPage","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f169423c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile smaller.5090c71e.png\";","module.exports = __webpack_public_path__ + \"static/media/Logo.4fb27a49.svg\";","var map = {\n\t\"./DSC01412.jpg\": 515,\n\t\"./DSC01414.jpg\": 516,\n\t\"./DSC01415.jpg\": 517,\n\t\"./DSC01419.jpg\": 518,\n\t\"./DSC01421.jpg\": 519,\n\t\"./DSC01430.jpg\": 520,\n\t\"./DSC01431.jpg\": 521,\n\t\"./DSC01436.jpg\": 522,\n\t\"./DSC01442.jpg\": 523,\n\t\"./DSC01445.jpg\": 524,\n\t\"./DSC01446.jpg\": 525,\n\t\"./DSC01447.jpg\": 526,\n\t\"./DSC01449.jpg\": 527,\n\t\"./DSC01450.jpg\": 528,\n\t\"./DSC01451.jpg\": 529,\n\t\"./DSC01456.jpg\": 530,\n\t\"./DSC01459.jpg\": 531\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 514;","module.exports = __webpack_public_path__ + \"static/media/DSC01412.fec72fe6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/DSC01414.c995b9d2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/DSC01415.d0530c2b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/DSC01419.738dc4c0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/DSC01421.8e92de60.jpg\";","module.exports = __webpack_public_path__ + \"static/media/DSC01430.ec7eef85.jpg\";","module.exports = __webpack_public_path__ + \"static/media/DSC01431.d4b77592.jpg\";","module.exports = __webpack_public_path__ + \"static/media/DSC01436.44f5694b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/DSC01442.36ed7dda.jpg\";","module.exports = __webpack_public_path__ + \"static/media/DSC01445.f438402d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/DSC01446.f32f0c40.jpg\";","module.exports = __webpack_public_path__ + \"static/media/DSC01447.f58ed008.jpg\";","module.exports = __webpack_public_path__ + \"static/media/DSC01449.db1bf0ec.jpg\";","module.exports = __webpack_public_path__ + \"static/media/DSC01450.cd0c4c9b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/DSC01451.5b55e19b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/DSC01456.482fa4fa.jpg\";","module.exports = __webpack_public_path__ + \"static/media/DSC01459.2b7f47e4.jpg\";","var map = {\n\t\"./DSC01412.jpg\": 533,\n\t\"./DSC01414.jpg\": 534,\n\t\"./DSC01415.jpg\": 535,\n\t\"./DSC01419.jpg\": 536,\n\t\"./DSC01421.jpg\": 537,\n\t\"./DSC01430.jpg\": 538,\n\t\"./DSC01431.jpg\": 539,\n\t\"./DSC01436.jpg\": 540,\n\t\"./DSC01442.jpg\": 541,\n\t\"./DSC01445.jpg\": 542,\n\t\"./DSC01446.jpg\": 543,\n\t\"./DSC01447.jpg\": 544,\n\t\"./DSC01449.jpg\": 545,\n\t\"./DSC01450.jpg\": 546,\n\t\"./DSC01451.jpg\": 547,\n\t\"./DSC01456.jpg\": 548,\n\t\"./DSC01459.jpg\": 549\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 532;","module.exports = __webpack_public_path__ + \"static/media/DSC01412.884a1125.jpg\";","module.exports = __webpack_public_path__ + \"static/media/DSC01414.9ad9b0ba.jpg\";","module.exports = __webpack_public_path__ + \"static/media/DSC01415.55b279bf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/DSC01419.c7eb8243.jpg\";","module.exports = __webpack_public_path__ + \"static/media/DSC01421.43b64262.jpg\";","module.exports = __webpack_public_path__ + \"static/media/DSC01430.8a761f0d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/DSC01431.94ca5cae.jpg\";","module.exports = __webpack_public_path__ + \"static/media/DSC01436.0d7dd168.jpg\";","module.exports = __webpack_public_path__ + \"static/media/DSC01442.4da0ee5f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/DSC01445.4effd6d8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/DSC01446.6fa255e6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/DSC01447.065ddc9a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/DSC01449.d9dcfce1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/DSC01450.3f33cab2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/DSC01451.22b66ff7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/DSC01456.e5f0a644.jpg\";","module.exports = __webpack_public_path__ + \"static/media/DSC01459.9440af5f.jpg\";","import React, { Component } from \"react\";\nimport \"./HeaderBar.scss\"\n\nexport default class HeaderBar extends Component {\n\n    render() {\n        return (\n            <div className=\"HeaderBar\">\n                <div className=\"dumb-div\">\n                    { this.props.logo != undefined ? <img height=\"50%\" src={this.props.logo} /> : <span />}\n                    <h1>{ this.props.title }</h1>\n\n                </div>\n\n                <ul className=\"MenuBar\">\n                    { this.props.children }\n                </ul>\n            </div>\n        );\n    }\n}","import React, { Component } from \"react\"\n\nexport default class AboutPage extends Component {\n    render() {\n        return(\n            <div>\n                <image></image>\n                <h2>michael bailey</h2>\n                <h3>projects</h3>\n            </div>\n        );\n    }\n};","import React, { Component } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport { Octokit } from \"@octokit/rest\";\n\nimport \"./ProjectPage.css\"\nimport GitRepo from \"../../components/GitRepo/GithubRepoFull\";\n\nexport default class HomePage extends Component {\n\n    state = {\n        gitRepoNames: []\n        \n    }\n\n    constructor(props) {\n        super(props)\n        this.getGithubPage.bind(this)\n    }\n\n    getGithubPage(name) {\n        return(\n            <>\n            <h1>NOT YET IMPLEMENTED</h1>\n            </>\n        )\n    }\n\n    componentDidMount() {\n        var results = fetch(\"https://api.github.com/users/michael-bailey/repos\")\n        .then(res => res.json())\n        .then(result => {this.setState({gitRepos: result});console.log(this.state.gitRepos)})\n\n        fetch(\"https://api.github.com/repos/michael-bailey/java-chat-client/contents/docs/Protocol.md\")\n        .then(res => res.json())\n        .then(res => this.setState({testing:  atob(res.content)}));\n    }\n\n    render() {\n        return(\n            <div>\n                <h2>Projects</h2>\n                <p>\n                    This page is here to go into depth about my projects.\n                    Most of my projects revolve around programming or something to do with programming as i find that the most enjoyable.\n                </p>\n                <div id=\"java-chat-client\" className=\"sect\">\n                    <h3>Chat client</h3>\n                    <p>\n                        This is currently my main project.<br/>\n                        It is an attempt to create a tamper proof messaging system that stores data in a secure manner.<br/>\n                    </p>\n                    {this.getGithubPage(\"\")}\n                    <h4 style={{marginTop: \"8vh\"}}>Application Design</h4>\n                    <p>\n                        When creating this project<br/>\n                        we made some classes that enabled core features of the program to work.<br/>\n                        Here are a few examples\n                    </p>\n                    <hr />\n                    <h5>Data Manager</h5>\n                    <p>\n                        This was created to store and restore data of any type or size.<br/>\n                        This was achieved using inbuilt java librarys.\n                        <div className=\"sect\" style={{width: \"40%\"}}>\n                            <code>java.io.*;</code><br/>\n                            <code>javax.crypto.*;</code><br/>\n                            <code>java.security.*;</code><br/>\n                            <code>java.util.Base64;</code><br/>\n                        </div>\n                        <br/>\n                        Using these librarys, the data is stored in key-value pairs<br/>\n                        where the key is a string and the value is any object that is serializable<br/>(this does require that the programmer knows what type of object is being stored in each key).\n                    </p>\n                </div>\n            </div>\n        );\n    }\n};","import React, { Component } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport { Octokit } from \"@octokit/rest\";\n\nimport \"./GitRepoFull.scss\"\nimport \"./markdown.scss\"\n\n\nexport default class GithubRepoFull extends Component {\n\n    state = {\n        readme: \"# ERROR\",\n        html_url: \"https://github.com/\",\n        description: \"error getting description\"\n\n    }\n\n    componentWillMount() {\n        let user = this.props.user\n        let repoName = this.props.repo\n\n        // get the git repo url\n        let github = new Octokit();\n        console.log(github)\n\n        github.repos.getReadme({\n            owner: user,\n            repo: repoName\n        }).then(res => {\n            console.log(res);\n            console.log(res.data)\n            console.log(res.data.content)\n            console.log(atob(res.data.content))\n            this.setState({readme: atob(res.data.content)})\n        })\n\n    }\n\n    render() {\n        return(\n            <>\n                <ReactMarkdown source={this.state.readme} className=\"markdownPage\" />\n            </>\n        );\n    }\n}","import React, { Component } from \"react\";\nimport \"./Gallery.css\"\nimport { render } from \"@testing-library/react\";\n\nexport default class Gallery extends Component {\n    render() {\n        return(\n            <div className=\"Gallery\">\n                {this.props.children}\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport \"./ImageModal.scss\"\n\n\nexport default class ImageModal extends Component {\n\n    loadedImage = {};\n\n    style = loading => {\n        return {\n          filter: `${loading ? 'blur(20px)' : 'blur(0px)'}`,\n        }\n      }\n\n    state = {\n        currentImage: this.props.overlaySrc,\n        loading: true\n    }\n\n    componentDidMount() {\n        this.getImage(this.props.src)\n    }\n\n    componentWillUnmount() {\n        if (this.loadedImage) {\n          this.loadedImage.onload = null\n        }\n      }\n\n    getImage(src) {\n        const image = new Image()\n        image.onload = () => this.setState({currentImage: this.loadedImage.src, loading: false})\n        image.src = src\n        this.loadedImage = image\n    }\n\n\n    render() {\n        return(\n            <span>\n                <img src={this.state.currentImage} alt={this.props.alt} className={this.props.className + \" overlay\"} style={this.style(this.state.loading)} />\n            </span>\n        )\n    }\n}\n\n// heavily based on https://medium.com/@perjansson/a-progressive-image-loader-in-react-f14ae652619d","import React, { Component } from \"react\";\n\nimport \"./Sect.scss\"\n\nexport default function Sect(props) {\n    return (\n        <div className=\"Sect\">\n            {props.children}\n        </div>\n    );\n}","import React, { Component } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport { Octokit } from \"@octokit/rest\";\n\nimport \"./GitRepoOverview.scss\"\nimport \"./markdown.scss\"\n\n\nexport default class GithubRepoOverview extends Component {\n\n    state = {\n        name: \"\",\n        http_url: \"\",\n        fork_count: \"\",\n        stars: \"\",\n        contributers: \"\",\n        description: \"\",\n    }\n\n    componentWillMount() {\n        let user = this.props.user\n        let repoName = this.props.repo\n\n        // get the git repo url\n        let github = new Octokit();\n        console.log(github)\n\n        github.repos.get({\n            owner: user,\n            repo: repoName\n        }).then(res => {\n            this.setState({\n                name: res.data.name,\n                http_url: res.data.http_url,\n                fork_count: res.data.forks_count,\n                stars: res.data.stargazers_count,\n                contributers: res.data.collaborators_url,\n                description: res.data.description\n            })\n        })\n\n    }\n\n    render() {\n        return(\n            <div className=\"GithubRepoOverview\">\n                <h3>{this.state.name}</h3>\n                <p>{this.state.description}</p>\n                <div className=\"BottomSection\">\n                    <span>{\"stars: \" + this.state.stars}</span>\n                    <a href={this.state.http_url} >dfsdfs</a>\n                </div>\n            </div>\n        );\n    }\n}","import React, { Component } from \"react\";\nimport { Octokit } from \"@octokit/rest\";\n\nimport \"./GitUser.scss\";\n\nexport default class App extends Component {\n  state = {\n    user: \"username here\"\n  };\n\n  componentDidMount() {\n    let user = this.props.user;\n\n    // get the git repo url\n    let github = new Octokit();\n    console.log(github);\n\n    github.users\n      .getByUsername({\n        username: user\n      })\n      .then(res =>\n        this.setState({\n          user_image: res.data.avatar_url,\n          user_name: res.data.name,\n          user_url: res.data.html_url,\n          user_repos: res.data.public_repos,\n          user_bio: res.data.bio\n        })\n      )\n      .then(res => console.log(this.state));\n  }\n\n  render() {\n    return (\n      <div className={ \"GitUser\" + this.props.className}>\n        <image src={this.state.user_image} alt=\"oof\" height=\"100%\" />\n        <div className=\"details\">\n          <h2>\n            <a href={this.state.user_url}>{this.state.user_name}</a>\n          </h2>\n          <span>{this.state.user_bio}</span>\n          <span>{\"repos: \" + this.state.user_repos}</span>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\n\nimport GitRepo from \"../../components/GitRepo/GithubRepoFull\"\nimport Gallery from \"../../components/Gallery/Gallery\"\nimport ImageModal from \"../../components/ImageModal/ImageModal\"\nimport Sect from \"../../components/sect/Sect\"\nimport GithubRepoOverview from \"../../components/GitRepo/GithubRepoOverview\";\nimport GithubUser from \"../../components/GitRepo/GithubUser\";\n\nimport profile from \"../../res/img/profile smaller.png\"\n\nimport \"./HomePage.scss\"\n\n\nexport default class HomePage extends Component {\n\n    state = {\n        currentRepos: [],\n        images: [],\n        overlayImages: []\n    }\n\n    HomePage(props) {\n        this.getGithubPages.bind(this);\n        this.getImages.bind(this)\n    }\n\n    getGithubPages() {\n        return(\n            <>\n                {this.state.currentRepos.slice(0,2).map((item, index) => <GithubRepoOverview key={\"key:\" + index} user=\"michael-bailey\" repo=\"java-chat-client\" />)}        \n            </>\n        )\n    }\n\n    getImages() {\n        return(\n            <>\n                {this.state.images.map((item, index) => <ImageModal key={\"key:\" + index} src={item} overlaySrc={this.state.overlayImages[index]} alt=\"whoops. not found\" className=\"images\"/>)}\n            </>\n        )\n    }\n\n    componentDidMount() {\n\n        fetch(\"https://api.github.com/users/michael-bailey/repos\")\n        .then(res => res.json())\n        .then(result => {this.setState({currentRepos: result})})\n\n        const imageContext = require.context(\"../../res/img/Gallery/x720/\", false, /\\.jpe?g/)\n        const overlayImageContext = require.context(\"../../res/img/Gallery/x360/\", false, /\\.jpe?g/)\n\n        this.setState({\n            images: imageContext.keys().splice(0, 6).sort().map(imageContext),\n            overlayImages: overlayImageContext.keys().splice(0, 6).sort().map(overlayImageContext),\n        });\n    }\n\n    render() {\n        return(\n            <div className=\"HomePage\">\n                <img src={profile} alt=\"¯\\_(ツ)_/¯\" className=\"ProfileImage\" />\n                <h2>Home</h2>\n                <p>This is a website dedicated to my projects and hobbies.<br/> as well as infomation about me.</p>\n\n                <Sect>\n                    <GithubUser user=\"michael-bailey\" className=\"sect\" />\n                </Sect>\n\n                <Sect>\n                    <h3>Programming</h3>\n                    <p>\n                        Quite a lot of what i do in my spare time is programming.<br/>\n                        This ranges from some test programs to try a specific area of a language or computing.<br/>\n                        to a few larger projects (for example this website).\n                    </p>\n                    <h4>Current Repositories</h4>\n                    <div className=\"RepoSect\">\n                        <Sect>\n                            <GithubRepoOverview user=\"michael-bailey\" repo=\"java-chat-client\" />\n                        </Sect>\n                        <Sect>\n                            <GithubRepoOverview user=\"michael-bailey\" repo=\"michael-bailey.github.io\" />\n                        </Sect>\n                    </div>\n                </Sect>\n                <Sect>\n                    <h3>Photography</h3>\n                    <p>\n                        As a small side project i have started doing some simple photography.<br/>basiclly messing about with a camera taking pictures of plants as they make good desktop backgrounds.\n                    </p>\n                    <Gallery>\n                        {this.getImages()}\n                    </Gallery>\n                </Sect>\n            </div>\n        );\n    }\n};","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Link, Route } from \"react-router-dom\";\n\n\nimport HeaderBar from './components/HeaderBar/HeaderBar';\n\nimport AboutPage from './pages/AboutPage/AboutPage';\nimport ProjectPage from \"./pages/ProjectsPage/ProjectPage\"\nimport HomePage from \"./pages/HomePage/HomePage\";\nimport Logo from \"./res/svg/Logo.svg\";\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Router>\n        <HeaderBar title=\"Michael Bailey\" logo={Logo}>\n          <li><Link to=\"/\"><b>Home</b></Link></li>\n          <li><Link to=\"/Projects\"><b>Projects</b></Link></li>\n        </HeaderBar>\n        <div className=\"pageSpacer\">\n          <Switch>\n            <Route exact path=\"/\" component={HomePage} />\n            <Route exact path=\"/About\" component={AboutPage} />\n            <Route exact path=\"/Projects\" component={ProjectPage} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}